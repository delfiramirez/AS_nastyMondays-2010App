package com.segonquart{	import flash.display.Sprite;	import flash.display.MovieClip;	import flash.display.BitmapData;	import flash.display.BitmapDataChannel;	import flash.filters.DisplacementMapFilter;	import flash.filters.DisplacementMapFilterMode;	import flash.geom.Point;	import flash.events.Event;	import caurina.transitions.Tweener;	public class nastyClip extends Sprite	{		private var miLogo:MovieClip;		private var staticTimes:int;		private var fuzzMin:int;		private var fuzzMax:int;		private var dmFilter:DisplacementMapFilter = createDMFilter();		public function nastyClip (logo:MovieClip)		{			miLogo = logo;			miLogo.filters = new Array(dmFilter);			addEventListener (Event.ENTER_FRAME, displayStatic);		}				private function displayStatic (e:Event):void		{			staticTimes--;			dmFilter.scaleX = randRange(fuzzMin,fuzzMax);			dmFilter.mapPoint = new Point(0,randRange(0,-190));			miLogo.filters = new Array(dmFilter);			if (staticTimes <= 0)			{				fuzzMin = 2;				fuzzMax = 5;				staticTimes = 3;			}		}		private function createDMFilter ():DisplacementMapFilter		{			var mapBitmap:BitmapData = new StaticMap(0,0);			var mapPoint:Point = new Point(0,0);			var channels:uint = BitmapDataChannel.GREEN;			var componentX:uint = channels;			var componentY:uint = channels;			var scaleX:Number = 5;			var scaleY:Number = 1;			var mode:String = DisplacementMapFilterMode.COLOR;			var color:uint = 0;			var alpha:Number = 0;			return new DisplacementMapFilter(			mapBitmap,			mapPoint,			componentX,			componentY,			scaleX,			scaleY,			mode,			color,			alpha);		}		private function randRange (min:int, max:int):int		{			var randomNum:int = Math.floor(Math.random() * (max - min + 1)) + min;			return randomNum;		}	}}